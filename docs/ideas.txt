# 4 - 6 colors
# 8 - 16 board size

beam search is not good because order matters. and we never get duplicates.
beam search may be good if find right function to define when to "shrink wellness".
right collapsing should help to avoid no solution situation. very bad boards. 




questions:
how to evaluate board?
what matters?

everything should be divided on "standard" pieces:

        o
o, oo, oo

if piece is too big it's divided on max "standard" pieces
that contain every 1 square of the group

every piece


counter force to not allow move from 3 pack elements


State {
    Board board;
    Seed colorSeed
    Moves moves;
}

try to code area combination finding function
that is also kind of template based on size of area

also try to optimize by computing most frequent sequences.

probably some kind of code generator is important

like create everything that should be computed for each sequence
output to some kind of file and rearrange...
